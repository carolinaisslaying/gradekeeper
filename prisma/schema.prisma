// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

model User {
  id          String       @id
  gradeMap    Json
  studyBlocks StudyBlock[]
}

model StudyBlock {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  name      String   @default("")
  startDate DateTime
  endDate   DateTime

  subjects Subject[]

  @@index([userId])
}

model Subject {
  id String @id @default(cuid())

  studyBlock   StudyBlock @relation(fields: [studyBlockId], references: [id], onDelete: Cascade)
  studyBlockId String

  longName         String
  courseCodeName   String
  courseCodeNumber String
  color            String @default("")

  components SubjectComponent[]

  @@index([studyBlockId])
}

model SubjectComponent {
  id String @id @default(cuid())

  subject   Subject @relation(fields: [subjectId], references: [id], onDelete: Cascade)
  subjectId String

  name                       String
  nameOfSubcomponentSingular String
  subjectWeighting           Float

  numberOfSubComponentsToDrop_Lowest Int
  subcomponents                      SubjectSubcomponent[]

  @@index([subjectId])
}

model SubjectSubcomponent {
  id String @id @default(cuid())

  component   SubjectComponent @relation(fields: [componentId], references: [id], onDelete: Cascade)
  componentId String

  numberInSequence     Int?
  overrideName         String?
  isCompleted          Boolean
  gradeValuePercentage Float

  @@index([componentId])
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}
